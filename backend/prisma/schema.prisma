generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  AGENT
  RESPONSABLE_RH
  EMPLOYE
}

enum Status {
  EN_ATTENTE
  VALIDE
  REFUSE
}

enum TypeDoc {
  CONTRAT
  CONGE
}

enum TypeConge {
  ANNUEL
  MALADIE
  MATERNITE
  PATERNITE
  SANS_SOLDE
}

model Utilisateur {
  id          Int      @id @default(autoincrement())
  nom         String
  prenom      String
  email       String   @unique
  motDePasse  String
  role        Role
  telephone   String?
  departement String?
  poste       String?
  service     String?
  resetToken  String?
  resetTokenExpiration DateTime?
  dateCreation DateTime @default(now())
  dateModification DateTime @updatedAt

  documentsCrees Document[] @relation("AgentDocuments")
  demandeConges Document[] @relation("EmployeDemandes")
}

model Client {
  id           Int       @id @default(autoincrement())
  nom          String
  prenom       String
  email        String    @unique
  telephone    String
  adresse      String
  dateNaissance DateTime
  dateCreation DateTime  @default(now())

  documents   Document[]
}

model Document {
  id            Int       @id @default(autoincrement())
  typeDocument  TypeDoc
  titre         String
  description   String?
  pathDocument  String
  status        Status
  urlSignature  String?
  dateCreation   DateTime  @default(now())
  dateModification DateTime @updatedAt

 // Relations
  client       Client?   @relation(fields: [idClient], references: [id])
  idClient     Int?

  agent       Utilisateur? @relation("AgentDocuments", fields: [idAgent], references: [id])
  idAgent     Int?

  employe     Utilisateur? @relation("EmployeDemandes", fields: [idEmploye], references: [id])
  idEmploye   Int?

  //champs pour contrat
  objetContrat  String?
  duree         DateTime?
  montant       Float?
  conditionGenerale String?

  //champs pour cong√©
  dateDebut     DateTime?
  dateFin       DateTime?
  typeConge     TypeConge?
  motif         String?

  //Archivage
  archivage    ServiceArchivage?

  archived   Boolean @default(false)
}

model ServiceArchivage {
  idDocument         Int       @id
  dateArchivage DateTime @default(now())
  dateCreation DateTime @default(now())

  document     Document @relation(fields: [idDocument], references: [id])
 
}